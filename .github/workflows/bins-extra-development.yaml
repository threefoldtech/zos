name: Runtime packages
on:
  push:
    branches:
      - "*"
    tags-ignore:
      - v*
    paths:
      - "bins/**"
      - ".github/workflows/bins-extra-development.yaml"

jobs:
  containerd:
    name: "Package: containerd"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code into the Go module directory
        uses: actions/checkout@v1

      - name: Setup basesystem
        run: |
          cd bins
          sudo ./bins-extra.sh --package basesystem

      - name: Build package (containerd)
        id: package
        run: |
          cd bins
          sudo ./bins-extra.sh --package containerd

      - name: Build package (runc)
        id: sub-package
        run: |
          cd bins
          sudo ./bins-extra.sh --package runc

      - name: Merging packages
        id: packages
        run: |
          mkdir bins/releases/rootfs
          sudo cp -av bins/releases/containerd/* bins/releases/rootfs/
          sudo cp -av bins/releases/runc/* bins/releases/rootfs/

      - name: Publish flist (tf-autobuilder, ${{ steps.package.outputs.name }})
        if: success()
        uses: threefoldtech/publish-flist@master
        with:
          token: ${{ secrets.HUB_JWT }}
          action: publish
          user: tf-autobuilder
          root: bins/releases/rootfs
          name: ${{ steps.package.outputs.name }}.flist

      - name: Crosslink flist (tf-zos-v3-bins.dev)
        if: success() && github.ref == 'refs/heads/main'
        uses: threefoldtech/publish-flist@master
        with:
          token: ${{ secrets.HUB_JWT }}
          action: crosslink
          user: tf-zos-v3-bins.dev
          name: containerd.flist
          target: tf-autobuilder/${{ steps.package.outputs.name }}.flist

  promtail:
    name: "Package: promtail"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Setup basesystem
        run: |
          cd bins
          sudo ./bins-extra.sh --package basesystem

      - name: Build package
        id: package
        run: |
          cd bins
          sudo ./bins-extra.sh --package promtail

      - name: Publish flist (tf-autobuilder, ${{ steps.package.outputs.name }})
        if: success()
        uses: threefoldtech/publish-flist@master
        with:
          token: ${{ secrets.HUB_JWT }}
          action: publish
          user: tf-autobuilder
          root: bins/releases/promtail
          name: ${{ steps.package.outputs.name }}.flist

      - name: Crosslink flist (tf-zos-v3-bins.dev)
        if: success() && github.ref == 'refs/heads/main'
        uses: threefoldtech/publish-flist@master
        with:
          token: ${{ secrets.HUB_JWT }}
          action: crosslink
          user: tf-zos-v3-bins.dev
          name: promtail.flist
          target: tf-autobuilder/${{ steps.package.outputs.name }}.flist

  virtwhat:
    name: "Package: virtwhat"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Setup basesystem
        run: |
          cd bins
          sudo ./bins-extra.sh --package basesystem

      - name: Build package
        id: package
        run: |
          cd bins
          sudo ./bins-extra.sh --package virtwhat

      - name: Publish flist (tf-autobuilder, ${{ steps.package.outputs.name }})
        if: success()
        uses: threefoldtech/publish-flist@master
        with:
          token: ${{ secrets.HUB_JWT }}
          action: publish
          user: tf-autobuilder
          root: bins/releases/virtwhat
          name: ${{ steps.package.outputs.name }}.flist

      - name: Crosslink flist (tf-zos-v3-bins.dev)
        if: success() && github.ref == 'refs/heads/main'
        uses: threefoldtech/publish-flist@master
        with:
          token: ${{ secrets.HUB_JWT }}
          action: crosslink
          user: tf-zos-v3-bins.dev
          name: virtwhat.flist
          target: tf-autobuilder/${{ steps.package.outputs.name }}.flist

  logtrunc:
    name: "Package: logtrunc"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Setup basesystem
        run: |
          cd bins
          sudo ./bins-extra.sh --package basesystem

      - name: Build package
        id: package
        run: |
          cd bins
          sudo ./bins-extra.sh --package logtrunc

      - name: Publish flist (tf-autobuilder, ${{ steps.package.outputs.name }})
        if: success()
        uses: threefoldtech/publish-flist@master
        with:
          token: ${{ secrets.HUB_JWT }}
          action: publish
          user: tf-autobuilder
          root: bins/releases/logtrunc
          name: ${{ steps.package.outputs.name }}.flist

      - name: Crosslink flist (tf-zos-v3-bins.dev)
        if: success() && github.ref == 'refs/heads/main'
        uses: threefoldtech/publish-flist@master
        with:
          token: ${{ secrets.HUB_JWT }}
          action: crosslink
          user: tf-zos-v3-bins.dev
          name: logtrunc.flist
          target: tf-autobuilder/${{ steps.package.outputs.name }}.flist

  shim-logs:
    name: "Package: shim-logs"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Setup basesystem
        run: |
          cd bins
          sudo ./bins-extra.sh --package basesystem

      - name: Build package
        id: package
        run: |
          cd bins
          sudo ./bins-extra.sh --package shimlogs

      - name: Publish flist (tf-autobuilder, ${{ steps.package.outputs.name }})
        if: success()
        uses: threefoldtech/publish-flist@master
        with:
          token: ${{ secrets.HUB_JWT }}
          action: publish
          user: tf-autobuilder
          root: bins/releases/shimlogs
          name: ${{ steps.package.outputs.name }}.flist

      - name: Crosslink flist (tf-zos-v3-bins.dev)
        if: success() && github.ref == 'refs/heads/main'
        uses: threefoldtech/publish-flist@master
        with:
          token: ${{ secrets.HUB_JWT }}
          action: crosslink
          user: tf-zos-v3-bins.dev
          name: shim-logs.flist
          target: tf-autobuilder/${{ steps.package.outputs.name }}.flist

  yggdrasil:
    name: "Package: yggdrasil"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Setup basesystem
        run: |
          cd bins
          sudo ./bins-extra.sh --package basesystem

      - name: Build package
        id: package
        run: |
          cd bins
          sudo ./bins-extra.sh --package yggdrasil

      - name: Publish flist (tf-autobuilder, ${{ steps.package.outputs.name }})
        if: success()
        uses: threefoldtech/publish-flist@master
        with:
          token: ${{ secrets.HUB_JWT }}
          action: publish
          user: tf-autobuilder
          root: bins/releases/yggdrasil
          name: ${{ steps.package.outputs.name }}.flist

      - name: Crosslink flist (tf-zos-v3-bins.dev)
        if: success() && github.ref == 'refs/heads/main'
        uses: threefoldtech/publish-flist@master
        with:
          token: ${{ secrets.HUB_JWT }}
          action: crosslink
          user: tf-zos-v3-bins.dev
          name: yggdrasil.flist
          target: tf-autobuilder/${{ steps.package.outputs.name }}.flist

  zufs:
    name: "Package: zufs (0-fs)"
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout code into the Go module directory
        uses: actions/checkout@v1

      - name: Setup basesystem
        run: |
          cd bins
          sudo ./bins-extra.sh --package basesystem

      - name: Build package
        id: package
        run: |
          cd bins
          sudo ./bins-extra.sh --package zufs

      - name: Publish flist (tf-autobuilder, ${{ steps.package.outputs.name }})
        if: success()
        uses: threefoldtech/publish-flist@master
        with:
          token: ${{ secrets.HUB_JWT }}
          action: publish
          user: tf-autobuilder
          root: bins/releases/zufs
          name: ${{ steps.package.outputs.name }}.flist

      - name: Crosslink flist (tf-zos-v3-bins.dev)
        if: success() && github.ref == 'refs/heads/main'
        uses: threefoldtech/publish-flist@master
        with:
          token: ${{ secrets.HUB_JWT }}
          action: crosslink
          user: tf-zos-v3-bins.dev
          name: 0-fs.flist
          target: tf-autobuilder/${{ steps.package.outputs.name }}.flist

  hdparm:
    name: "Package: hdparm"
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.14
        uses: actions/setup-go@v1
        with:
          go-version: 1.14
        id: go

      - name: Checkout code into the Go module directory
        uses: actions/checkout@v1

      - name: Setup basesystem
        run: |
          cd bins
          sudo ./bins-extra.sh --package basesystem

      - name: Build package
        id: package
        run: |
          cd bins
          sudo ./bins-extra.sh --package hdparm

      - name: Publish flist (tf-autobuilder, ${{ steps.package.outputs.name }})
        if: success()
        uses: threefoldtech/publish-flist@master
        with:
          token: ${{ secrets.HUB_JWT }}
          action: publish
          user: tf-autobuilder
          root: bins/releases/hdparm
          name: ${{ steps.package.outputs.name }}.flist

      - name: Crosslink flist (tf-zos-v3-bins.dev)
        if: success() && github.ref == 'refs/heads/main'
        uses: threefoldtech/publish-flist@master
        with:
          token: ${{ secrets.HUB_JWT }}
          action: crosslink
          user: tf-zos-v3-bins.dev
          name: hdparm.flist
          target: tf-autobuilder/${{ steps.package.outputs.name }}.flist

  corex:
    name: "Package: corex (static)"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code into the Go module directory
        uses: actions/checkout@v1

      - name: Setup basesystem
        run: |
          cd bins
          sudo ./bins-extra.sh --package basesystem
          sudo ./bins-extra.sh --package base-musl

      - name: Build dependency (zlib)
        run: |
          cd bins
          sudo ./bins-extra.sh --package zlib-musl

      - name: Build dependency (libcap)
        run: |
          cd bins
          sudo ./bins-extra.sh --package libcap-musl

      - name: Build dependency (libjson-c)
        run: |
          cd bins
          sudo ./bins-extra.sh --package libjsonc-musl

      - name: Build dependency (openssl)
        run: |
          cd bins
          sudo ./bins-extra.sh --package openssl-musl

      - name: Build dependency (libwebsockets)
        run: |
          cd bins
          sudo ./bins-extra.sh --package libwebsockets-musl

      - name: Build package (corex)
        id: package
        run: |
          cd bins
          sudo ./bins-extra.sh --package corex-musl

      - name: Publish flist (tf-autobuilder, ${{ steps.package.outputs.name }})
        if: success()
        uses: threefoldtech/publish-flist@master
        with:
          token: ${{ secrets.HUB_JWT }}
          action: publish
          user: tf-autobuilder
          root: bins/releases/corex-musl
          name: ${{ steps.package.outputs.name }}.flist

      - name: Crosslink flist (tf-zos-v3-bins.dev)
        if: success() && github.ref == 'refs/heads/main'
        uses: threefoldtech/publish-flist@master
        with:
          token: ${{ secrets.HUB_JWT }}
          action: crosslink
          user: tf-zos-v3-bins.dev
          name: corex.flist
          target: tf-autobuilder/${{ steps.package.outputs.name }}.flist

  cloudhypervisor:
    name: "Package: cloud-hypervisor"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Setup basesystem
        run: |
          cd bins
          sudo ./bins-extra.sh --package basesystem

      - name: Build package
        id: package
        run: |
          cd bins
          sudo ./bins-extra.sh --package cloudhypervisor

      - name: Publish flist (tf-autobuilder, ${{ steps.package.outputs.name }})
        if: success()
        uses: threefoldtech/publish-flist@master
        with:
          token: ${{ secrets.HUB_JWT }}
          action: publish
          user: tf-autobuilder
          root: bins/releases/cloudhypervisor
          name: ${{ steps.package.outputs.name }}.flist

      - name: Crosslink flist (tf-zos-v3-bins.dev)
        if: success() && github.ref == 'refs/heads/main'
        uses: threefoldtech/publish-flist@master
        with:
          token: ${{ secrets.HUB_JWT }}
          action: crosslink
          user: tf-zos-v3-bins.dev
          name: cloudhypervisor.flist
          target: tf-autobuilder/${{ steps.package.outputs.name }}.flist
  msgbusd:
    name: "Package: msgbusd"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Setup basesystem
        run: |
          cd bins
          sudo ./bins-extra.sh --package basesystem

      - name: Build package
        id: package
        run: |
          cd bins
          sudo ./bins-extra.sh --package msgbusd

      - name: Publish flist (tf-autobuilder, ${{ steps.package.outputs.name }})
        if: success()
        uses: threefoldtech/publish-flist@master
        with:
          token: ${{ secrets.HUB_JWT }}
          action: publish
          user: tf-autobuilder
          root: bins/releases/msgbusd
          name: ${{ steps.package.outputs.name }}.flist

      - name: Crosslink flist (tf-zos-v3-bins.dev)
        if: success() && github.ref == 'refs/heads/main'
        uses: threefoldtech/publish-flist@master
        with:
          token: ${{ secrets.HUB_JWT }}
          action: crosslink
          user: tf-zos-v3-bins.dev
          name: msgbusd.flist
          target: tf-autobuilder/${{ steps.package.outputs.name }}.flist
