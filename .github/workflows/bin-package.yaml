name: Deploy

on:
  workflow_call:
    inputs:
      development:
        description: "development hub repo"
        required: false
        default: tf-zos-v3-bins.dev
        type: string
      quality:
        description: "qa hub repo"
        required: false
        default: tf-zos-v3-bins.qa
        type: string
      testing:
        description: "testing hub repo"
        required: false
        default: tf-zos-v3-bins.test
        type: string
      production:
        description: "main hub repo"
        required: false
        default: tf-zos-v3-bins
        type: string
      package:
        description: "package to build"
        required: true
        type: string
    secrets:
      token:
        required: true
jobs:
  builder:
    name: builder
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code into the Go module directory
        uses: actions/checkout@v1
      - name: Setup basesystem
        run: |
          cd bins
          sudo ./bins-extra.sh --package basesystem
      - name: Build package (${{ inputs.package }})
        id: package
        run: |
          cd bins
          sudo ./bins-extra.sh --package ${{ inputs.package }}
      - name: Publish flist (tf-autobuilder, ${{ steps.package.outputs.name }})
        if: success()
        uses: threefoldtech/publish-flist@master
        with:
          token: ${{ secrets.token }}
          action: publish
          user: tf-autobuilder
          root: bins/releases/${{ inputs.package }}
          name: ${{ steps.package.outputs.name }}.flist
      - name: Publishing (development)
        uses: threefoldtech/publish-flist@master
        if: success() && github.ref == 'refs/heads/main'
        with:
          token: ${{ secrets.token }}
          action: crosslink
          user: ${{ inputs.development }}
          name: ${{ inputs.package }}.flist
          target: tf-autobuilder/${{ steps.package.outputs.name }}.flist
      - name: Publishing (quality)
        uses: threefoldtech/publish-flist@master
        if: success() && startsWith(github.ref, 'refs/heads/v') && contains(github.ref, '-qa')
        with:
          token: ${{ secrets.token }}
          action: crosslink
          user: ${{ inputs.quality }}
          name: ${{ inputs.package }}.flist
          target: tf-autobuilder/${{ steps.package.outputs.name }}.flist
      - name: Publishing (testing)
        uses: threefoldtech/publish-flist@master
        if: success() && startsWith(github.ref, 'refs/heads/v') && contains(github.ref, '-rc')
        with:
          token: ${{ secrets.token }}
          action: crosslink
          user: ${{ inputs.testing }}
          name: ${{ inputs.package }}.flist
          target: tf-autobuilder/${{ steps.package.outputs.name }}.flist
      - name: Publishing (production)
        uses: threefoldtech/publish-flist@master
        if: success() && startsWith(github.ref, 'refs/heads/v') && !contains(github.ref, '-rc') && !contains(github.ref, '-qa')
        with:
          token: ${{ secrets.token }}
          action: crosslink
          user: ${{ inputs.production }}
          name: ${{ inputs.package }}.flist
          target: tf-autobuilder/${{ steps.package.outputs.name }}.flist
